import React, { useContext } from 'react';
import {AppContext} from "../App";

export default function SearchBar() {
  const {
    setPage,
    searchQuery,
    setSearchQuery,
    searchNote,
    setSearchNote,
    searchScreenshot,
    setSearchScreenshot,
    searchLink,
    setSearchLink,
    setSearchResults,
  } = useContext(AppContext);

  let result_list = [];

  // Handle when the search button is clicked
  function handleSearch(event) {
    event.preventDefault()
    let content =  []
    
    // Adding content types
    if (searchNote) {
      content.push("notes")
    }
    if (searchScreenshot) {
      content.push("screenshots")
    }
    if (searchLink) {
      content.push("links")
    }

    console.log("Here is the searchQuery: " + searchQuery);
    fetch("http://127.0.0.1:4444/search", {
      method: "POST",
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
      },
      body: JSON.stringify({"search": searchQuery, "content": content})
    })
      .then((response) => {
        return response.json();
      })
      .then((data) => {
        // Logic for finding the type then displaying correctly in link list
        for (const key in data) {
          let display_field;
          let route;
          switch (key){
            case "links":
              display_field = "link";
              route = "link";
              break;
            case "screenshots":
              display_field = "caption";
              route = "screenshot";
              break;
            case "notes":
              display_field = "title";
              route = "note";
              break;
            default:
              display_field = "link";
              route = "link";

          }
              
          // Looping through the ENUMERATION generated by the list in this for-loop
          for (let obj in data[key]) {
            const item_id = data[key][obj]["id"];
            // Use absoute path only in env file for data folder.
            const href = "http://localhost:4444/open_" + route + "/" + item_id;
            
            // Customize icon next to search result based on the route type
            if (route === "link") {
              result_list.push(
                <li>
                  <i style={{"color":"DarkOrange"}} class="material-icons">link</i><a href={href} target="_blank">{data[key][obj][display_field]}</a>&nbsp;({data[key][obj]["about"].substring(0, 25)}...)
                </li>
              )
            } else if (route === "screenshot") {
              result_list.push(
                <li>
                  <i style={{"color":"Black"}} class="material-icons">image</i><a href={href} target="_blank">{data[key][obj][display_field]}</a>&nbsp;({data[key][obj]["about"].substring(0, 25)}...)
                </li>
              )

            } else if (route === "note") {
              result_list.push(
                <li>
                  <i style={{"color":"Beige"}} class="material-icons">description</i><a href={href} target="_blank">{data[key][obj][display_field]}</a>&nbsp;({data[key][obj]["about"].substring(0, 25)}...)
                </li>
              )

            }

          }
        }
        setSearchResults(result_list);
      })
        .catch((error) => console.log(error));
  }
  
  return (
      <div>
        <form onSubmit={handleSearch}>
          <div style={{"text-align":"center"}}>
            <div>
                <input type="text" value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)}/>
                <input type="submit" value="Search" id="search"/>
            </div>
          <br/>
            <div>
            <fieldset>
              <div>
                <input type="checkbox" id="notes" name="notes" checked={searchNote} onChange={() => setSearchNote(!searchNote)}/>
                <label for="notes">&nbsp;Notes&nbsp;&nbsp;&nbsp;</label>
                <input type="checkbox" id="screenshots" name="screenshots" checked={searchScreenshot} onChange={() => setSearchScreenshot(!searchScreenshot)}/>
                <label for="screenshots">&nbsp;Screenshots&nbsp;&nbsp;&nbsp;</label>
                <input type="checkbox" id="links" name="links" checked={searchLink} onChange={() => setSearchLink(!searchLink)}/>
                <label for="links">&nbsp;Links</label>
              </div>
            </fieldset>
            </div>
          </div>
        </form>
      </div>
  )}
